# 
# Tiramisu Discord Bot
# --------------------
# Help Command Contents
#

# NOTE: The `contents:` field should be in discord formatting, as this is the RAW MESSAGE sent to discord.
# NOTE: The `[[BOT]]` placeholder will be replaced with the bot's username on-the-fly.

# Initial Help Menu
main:
  name: Contents
  contents: |
    # Help - Contents
    - *Welcome Messages*: How to set up join/leave messages
    - *For Moderators*: Information regarding moderation with Tiramisu
    - *Admins*: How to manage [[BOT]] administrators
    - *Settings*: How to change settings for the bot, and what different settings do:
    - *Utilities*: Info on various utility commands
    - *Fun Commands*: Various entertainment  commands and what they do
    - *

welcome:
  name: Welcome Messages
  contents: |
    # Welcome Messages
    To have the bot welcome users when they leave or join the server, set the `system_channel` setting to an appropriate channel.

mods:
  name: For Moderators
  contents: |
    # For Moderators
    [[BOT]] provides multiple commands and other utilities for moderating your server.
    ## Modlog
    One of the best parts about Tiramisu's moderation commands is that they are logged in a specific channel so all moderators know what is happening in their server and can stay informed.
    Make sure an administrator has set the `modlog_channel` setting to a channel that you can see.
    ## Actions
    [[BOT]]'s various actions are mostly provided as slash commands, but some are also available by right-clicking users or their messages.
    You can:
    - Warn
    - Timeout (with more time choices)
    - Kick
    - Ban
    All of which are sent to the modlog, in addition to having the appropriate reason in the Audit Log.
    For more in-depth information for moderators, see our Moderator Guide: https://github.com/RoseSMP/Tiramisu/blob/prod/doc/moderator-guide.md


admin:
  name: Admins
  contents: |
    # Admins Help
    Adminstrators are users you have selected that can change settings for your bot, and perform all moderation actions. Admins can also add and remove other admins.
    If nobody in your discord server is an admin yet, the server owner can add themselves as an admins.
    ## Adding Admins
    To add an admin, use the `/admin add` command. Only other admins and the server owner can add admins.
    ```
    /admin add user:USER
    ```where `USER` is the person you would like to make an admin. 
    ## Removing Admins
    Removing administrators is the same as adding them, except you use the `/admin rm` command instead.
    Optionally, you can specify whether the former administrator should be mentioned in [[BOT]]'s response, with the `mention_user` option.

    ## Listing Admins
    To see who is already an administrator, use the `/admin list` command. Use the `mention_admins` option to specify whether the list should ping the admins or not.

setting:
  name: Settings
  contents: |
    # Settings Help
    You can set channels, roles, and change other functionality of the bot with the `/setting` command. Use `/setting get` to check what a setting is currently set to, and use `/setting set` to change that value.
    ## Changing Settings
    To change a setting, for example the `staff_role` setting, use the `/setting set` command, like so:
    ```
    /setting set setting:staff_role value:@Staff
    ```mentioning your staff role with `@Staff`
    When setting an channel or role, always @mention or #mention the role or channel. You can also use the ID if preferred.
    The second part of the setting after the underscore tells you what kind of input it needs.
    ## Checking Settings
    You can check what different settings are currently set to with the `/setting get` command. You can also use `/setting get setting:all` to get a list of all available settings.
    ## Available Settings
    Below is a list of some of the available settings and what they do:
    - `system_channel`: The channel to show join/leave messages in
    - `announcement_channel`: The channel to put announcements from the `/announce` command in
    - `announcement_role`: The role to mention when pings are enabled in the `/announce` command
    - `staff_role`: The role for all staff members. Users with this role can perform moderation actions, and this role is given to users automatically when their application is accepted by an administrator.
    - `bugreports_channel`: The channel to post bug reports in from the `/report bug` command
    - `ip_address`: the IP address to show in the `/ip` command
    - `ip_text`: An extended description for the `/ip` command
    - `ip_game`: The name of the game `/ip` is for
    - `application_channel`: the channel to create application private threads in
    - `application_questions`: A semicolon (`;`) separated list of questions to ask applicants. See the *Mod Applications* section for the default list of questions.
    - `suggestions_channel`: The channel to post suggestions in. See the *Suggestions* help topic.


utility:
  name: Utilities
  contents: |
    # Utilities
    [[BOT]] comes with various utility commands to help administer to your server.
    ## `/announce`
    Members with the `staff_role` and admins can use this command. Sends an announcement in the `announcement_channel`, optionally pinging `announcement_role`
    ## `/addrole`
    Only admins can use this command. Gives the specified role to all users.
    ## `/delrole`
    Only admins can use this command. Revokes the specified role from all users.
    ## `/ip`
    Anyone can use this command. Sends information on how to join a game server.
    Uses the following settings:
     - `ip_address`: the IP address or domain name of the game server
     - `ip_game`: the name of what game is accessible via that IP address.
     - `ip_text`: additional joining instructions or other information.
    ## `/hello`
    Anyone can use this command. Says hello!

fun:
  name: Fun Commands
  contents: |
    # Fun Commands
    [[BOT]] has several commands to keep your server fun and interesting. This is what they do, and how to use them.
    ## `/eight_ball`
    Ask the magic eight ball a question.
    ## `/dice`
    Roll a dice, getting a random number. Use the `type` option to change what kind of dice to roll.
    ## `/coinflip`
    Flips a coin, resulting in either heads or tails.

perms:
  name: Permissions
  contents: |
    # Permissions
    [[BOT]] has three permission levels for commands: Admins, Staff, and Everyone
    ## Admins
    Admins can use every command, change settings, add and remove admins, and use certain commands that others cannot.
    See the *Admins* section of the help menu for more information.
    ## Staff
    Staff are people with the role in the `staff_role` setting. They can do all moderation actions, but do not have permission to change settings, admins or to do other potentially disruptive things.
    See the *Settings* section of the help menu for how to change the `staff_role` setting.
    ## Everyone
    Everyone is, `@everyone`! Many of Tiramisu's commands can be used by everyone. To restrict these users from performing commands, use Discord's built-in command permissions system.
    This is located at *Server Settings* → *Integrations* → *Tiramisu*.

tickets:
  name: Ticket System
  contents: |
    # Ticket System
    [[BOT]]'s simple ticket system allows users to get help from staff and work out problems.
    ## Creating Tickets
    To create a ticket, use the `/ticket create` slash command. If tickets have been set up by server admins, a ticket will be created via private threads.
    You can also set up a button for people to press that will create a ticket. Use the `/ticket button` slash command to do this.
    ## Closing Tickets
    Any member of a ticket can close it, which is done by using the `/ticket close` slash command. This will close and lock the thread, alert moderators in the Modlog channel, and DM the ticket creator a link to the thread for future refrence.
    
levels:
  name: Levels
  contents: |
    # Levelling System
    [[BOT]] has a levelling system to encourage your users to talk on your server. Note that this does not do any form of spam prevention. It is up to your automod rules and moderators to stop spam in your server.
    ## Points
    When someone sends a message, they are randomly added between 1 and 3 points, Unless their message is sent in one of the channels listed in the `no_points_channels` setting.
    ## Levels
    Levels are calculated with the following equation, rounded down:
    ```
    level = log₂( points ÷ 10 )
    ```When someone levels up, a message is sent in the channel they were talking in.
    ## Disabling Levelling
    To disable levelling, set the `no_points_channels` setting to `all`.
    ## Resetting Levels
    If a user has been spamming, or you want to reset their level for any reason, moderators can use the `/resetlevel` command to set a user's points and level back to zero. This is logged in the `modlog_channel`

applications:
  name: Mod Applications
  contents: |
    # Moderator Applications
    [[BOT]]'s applications system makes it easy to open applications for new moderators.
    To enable this system, simply set the `application_channel` setting to a valid channel. Then, users can use the `/application create` to apply, or the button if you use the `/application button` command. They will be asked a series of questions which they must respond to before the application thread is created.
    The default questions are:
    - 'Have you moderated a community before?'
    - 'What is your experience resolving confilicts?'
    - 'Why are you a good fit for the position?'
    - 'Why do you want to moderate this server?'
    If you wish to change these questions, you can set the `application_questions` setting. Separate your questions with a semicolon (`;`).
    ## Rejecting Applications
    To close or reject an application, use the `/application close` slash command in the application thread.
    ## Accepting Applications
    To accept an application, administrators (See the *Admins* help topic) can use the `/application accept` slash command. This will close the thread, and give the applicant the `staff_role` you have set.

suggestions:
  name: suggestions
  contents: |
    # Suggestions
    [[BOT]]'s suggestions system allows users to suggest and vote on ideas to be added to your server.
